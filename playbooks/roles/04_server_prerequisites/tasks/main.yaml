- name: Check if server has docker installed
  ansible.builtin.command: which docker
  register: docker_check
  ignore_errors: true
  changed_when: false

- name: Install docker dependencies
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
  when: docker_check.rc != 0

- name: Create keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  when: docker_check.rc != 0

- name: Download Docker GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
  when: docker_check.rc != 0

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
  when: docker_check.rc != 0

- name: Install Docker packages
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes
  when: docker_check.rc != 0

- name: Start and enable Docker service
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: yes
  when: docker_check.rc != 0

- name: Check if k8s python library is installed
  ansible.builtin.command: python3 -c "import kubernetes"
  register: k8s_lib_check
  ignore_errors: true
  changed_when: false

- name: Install kubernetes python library
  ansible.builtin.pip:
    name: kubernetes
    state: present
  when: k8s_lib_check is failed
  register: k8s_lib_install_pip
  ignore_errors: true
  become: true

- name: Install kubernetes python lib through apt
  ansible.builtin.apt:
    name: python3-kubernetes
    state: present
    update_cache: yes
  when: k8s_lib_install_pip is failed
  become: true